@page "/test"
@using MultiDictionary.Shared.ViewModels
@using MultiDictionary.UI.Interfaces
@inject IGlossaryService GlossaryService
@inject IWordService WordService

<h3>Test buttons</h3>

<div>
    <p>These buttons are used only to test services functionality and connection to WebApi.</p>
    <p>Enjoy clicking them!</p>
</div>

<button type="button" class="btn btn-info test-btn" @onclick="LoadAllGlossaries">Load All Glossaries</button>

<ul>
    @if (allGlossaries != null)
    {
        @foreach (var glossary in allGlossaries)
        {
            <li>@glossary.Name</li> <!-- Displays glossary names -->
        }
    }
    else
    {
        <li>No glossaries found</li>
    }
</ul>

<button type="button" class="btn btn-info test-btn" @onclick="LoadAllWords">Load All Words</button>

<ul>
    @if (allWords != null)
    {
        @foreach (var word in allWords)
        {
            <li>@word.WordName</li>
        }
    }
    else
    {
        <li>No words found</li>
    }
</ul>


@code {
    private IEnumerable<GlossaryViewModel>? allGlossaries;
    private IEnumerable<WordViewModel>? allWords;

    private async Task LoadAllGlossaries()
    {
        allGlossaries = await GlossaryService.GetAllAsync(false); // Calls API with includeWords=false
    }

    private async Task LoadAllWords()
    {
        allWords = await WordService.GetAllAsync();
    }
}